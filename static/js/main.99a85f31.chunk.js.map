{"version":3,"sources":["components/sky-logo.png","components/Header.js","components/Flights.js","components/Currencies.js","components/Locations.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","width","alt","title","Flights","quotes","map","quote","id","QuoteId","MinPrice","OutboundLeg","CarrierIds","DepartureDate","QuoteDateTime","Currencies","state","currencies","selectedCurrency","validationError","updateCurrency","target","sendCurrency","setState","fetch","then","response","json","data","teamsFromApi","currency","value","Code","display","Symbol","concat","catch","error","console","log","this","onChange","e","style","color","marginTop","Component","Auto","useState","setDisplay","options","setOptions","search","setSearch","wrapperRef","useRef","useEffect","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","current","contains","updateSearch","place","ref","onClick","placeholder","preventDefault","a","reqOptions","method","headers","URLSearchParams","query","Places","CityId","PlaceName","fetchPlaces","handleSearch","onLoad","fetchInitialList","SearchBox","flights","setFlights","showFlights","setShowFlights","fromLocation","setFromLocation","toLocation","setToLocation","Date","startDate","setStartDate","endDate","setEndDate","setCurrency","htmlFor","required","selected","date","url","toISOString","substring","Quotes","findFlights","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99a85f31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sky-logo.9b158367.png\";","import React from 'react';\r\nimport './Header.css';\r\nimport logo from './sky-logo.png';\r\n\r\nfunction Header(props) { \r\n    return(\r\n        <div className=\"header\">\r\n            <img src={logo} className = \"header-logo\"  width=\"200\" alt=\"logo\"  />\r\n            <span>{props.title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Flights.css';\r\n\r\nfunction Flights(props) { \r\n\r\n    return(\r\n        <div className=\"flights\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Quote ID</th>\r\n                        <th>Min Price</th>\r\n                        <th>Outbound Carrier IDs</th>\r\n                        <th>Outbound Carrier Name</th>\r\n                        <th>Outbound Leg Departure Date</th>\r\n                        <th>Quote Date and Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.quotes.map(quote => {\r\n                        return (<tr id={quote.QuoteId}>\r\n                            <th>${quote.MinPrice}</th>\r\n                            <th>{quote.OutboundLeg.CarrierIds}</th>\r\n                            <th>{quote.OutboundLeg.DepartureDate}</th>\r\n                            <th>{quote.QuoteDateTime}</th>\r\n                        </tr>);\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Flights;","import { Component } from \"react\";\r\n\r\nclass Currencies extends Component {\r\n\r\n    state = {\r\n        currencies: [],\r\n        selectedCurrency: \"\",\r\n        validationError: \"\"\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(\r\n            \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies\", {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-key\": \"42a5ad4309msh0f7539296c11895p172628jsn1bac294685a3\",\r\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\"\r\n                }\r\n            }\r\n        )\r\n          .then(response => {\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            let teamsFromApi = data.Currencies.map(currency => {\r\n              return { value: currency.Code, display: currency.Symbol + \" - \" + currency.Code };\r\n            });\r\n            this.setState({\r\n              currencies: [\r\n                {\r\n                  value: \"USD\",\r\n                  display:\r\n                    \"$ - USD\"\r\n                }\r\n              ].concat(teamsFromApi)\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n\r\n        updateCurrency = (target) => {\r\n            this.props.sendCurrency(target)\r\n            this.setState({selectedCurrency:target,\r\n                            validationError: target === \"\"\r\n                              ? \"You must select your favourite team\"\r\n                              : \"\"})\r\n        }\r\n\r\n\r\n        render() {\r\n            return (\r\n              <div>\r\n                <select\r\n                  value={this.state.selectedCurrency}\r\n                  onChange={e=> this.updateCurrency(e.target.value)\r\n                  }              \r\n                >\r\n                  {this.state.currencies.map(currency => (\r\n                    <option\r\n                      key={currency.value}\r\n                      value={currency.value}\r\n                    >\r\n                      {currency.display}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <div\r\n                  style={{\r\n                    color: \"red\",\r\n                    marginTop: \"5px\"\r\n                  }}\r\n                >\r\n                  {this.state.validationError}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n\r\n}\r\n\r\nexport default Currencies;","// IMPORTS\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport './Locations.css';\r\n\r\n/**\r\n * Description: \r\n * \r\n * @param {*} props \r\n * @returns An input field that autocompletes a user's input\r\n */\r\nfunction Auto(props) {\r\n    const [display, setDisplay] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const wrapperRef = useRef(null);\r\n\r\n    function noSearch(e) {\r\n        e.preventDefault()\r\n        async function fetchInitialList() {\r\n            const reqOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": \"42a5ad4309msh0f7539296c11895p172628jsn1bac294685a3\",\r\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n                    \"useQueryString\": true\r\n                }\r\n            }\r\n            let response = fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=-/\", reqOptions)\r\n            response = await response.data.json()\r\n            console.log(response.Places)\r\n            setOptions(response)\r\n        }\r\n        fetchInitialList()\r\n\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let value = e.target.value\r\n        setSearch(value)\r\n        async function fetchPlaces() {\r\n            const reqOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": \"42a5ad4309msh0f7539296c11895p172628jsn1bac294685a3\",\r\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n                }\r\n            }\r\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({ query: value }), reqOptions)\r\n            console.log(value)\r\n            console.log(response)\r\n            response = await response.json()\r\n            console.log(response.Places)\r\n            setOptions(response.Places.map(place => {\r\n                return {value: place.CityId, display: place.PlaceName }\r\n            }))\r\n        }\r\n        fetchPlaces()\r\n    }\r\n\r\n    const sendCity = () => {\r\n        console.log({search})\r\n        return (\r\n            search\r\n        );\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            window.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    });\r\n\r\n    const handleClickOutside = event => {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(event.target)) {\r\n            setDisplay(false);\r\n        }\r\n    };\r\n\r\n    const updateSearch = place => {\r\n        props.onChange(place)\r\n        setSearch(place)\r\n        sendCity(place)\r\n        console.log(place)\r\n        setDisplay(false)\r\n    };\r\n\r\n\r\n    return (\r\n        <div ref={wrapperRef} className=\"flex-container flex-column pos-rel\">\r\n            <input\r\n                id=\"auto\"\r\n                onClick={() => setDisplay(!display)}\r\n                placeholder=\"Type to search\"\r\n                value={search}\r\n                onChange={e => handleSearch(e)}\r\n                onLoad={noSearch}\r\n            />\r\n            {display && (\r\n                <div className=\"autoContainer\">\r\n                    {options.map(place =>\r\n                        <option\r\n                        key={place.value}\r\n                        value={props.value}\r\n                        onClick={() => updateSearch(place.value)}\r\n                        >\r\n                        {place.display}\r\n                      </option>)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Auto;\r\n","/** \r\n * Description: SearchBox.js contains all fields neccessary to make a flight search\r\n * with the input of destinations, dates, and currency used.\r\n * \r\n * @returns default SearchBox component\r\n*/\r\n\r\n// IMPORTS\r\nimport React, { useState } from 'react';\r\nimport Datepicker from 'react-datepicker';\r\nimport Flights from './Flights';\r\nimport Currencies from './Currencies';\r\nimport Locations from './Locations';\r\nimport './SearchBox.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction SearchBox() {\r\n  // Hook statements used to keep track of input.\r\n  const [flights, setFlights] = useState([])\r\n  const [showFlights, setShowFlights] = useState(false)\r\n  const [fromLocation, setFromLocation] = useState(\"\")\r\n  const [toLocation, setToLocation] = useState(\"\")\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const [currency, setCurrency] = useState(\"USD\")\r\n\r\n  // Const handles setting the start date of flight inquiry.\r\n  const handleStartDate = date => {\r\n    setStartDate(date)\r\n  }\r\n\r\n  // Const handles setting the end date of flight inquiry.\r\n  const handleEndDate = date => {\r\n    setEndDate(date)\r\n  }\r\n\r\n  /**\r\n   * Function handles the Get Quotes call to the API in order to\r\n   * display the cheapest flights to the user.\r\n   * \r\n   * @param {*} e when Search Flights button is clicked\r\n   */\r\n  function handleSearch(e) {\r\n    e.preventDefault()\r\n    /**\r\n     * Function fetches the API in order to find the quotes of flights\r\n     * matching the user's inputs.\r\n     */\r\n    async function findFlights() {\r\n      const url = `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/${currency}/en-US/${fromLocation}/${toLocation}/${startDate.toISOString().substring(0, 10)}`\r\n      const reqOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n          \"x-rapidapi-key\": \"42a5ad4309msh0f7539296c11895p172628jsn1bac294685a3\",\r\n          \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n          \"useQueryString\": true\r\n        }\r\n      }\r\n      // Get response from API and record into a table.\r\n      let response = await fetch(url, reqOptions)\r\n      response = await response.json();\r\n      setFlights(response.Quotes)\r\n    }\r\n    // Call API fetch function and reset inputs\r\n    findFlights()\r\n    setToLocation(\"\")\r\n    setFromLocation(\"\")\r\n    setShowFlights(true)\r\n  }\r\n\r\n  /**\r\n   * Function gets the currency selected from Currencies.js file.\r\n   * \r\n   * @param {*} value currency ID selected\r\n   */\r\n  function getCurrency(value) {\r\n    setCurrency(value)\r\n  }\r\n\r\n  /**\r\n   * Function gets the origin city selected from the Locations.js file.\r\n   * \r\n   * @param {*} value CityId selected\r\n   */\r\n  function getToCity(value) {\r\n    setToLocation(value)\r\n  }\r\n\r\n  /**\r\n   * Function gets the destination city selected from the Locations.js file.\r\n   * \r\n   * @param {*} value CityId selected\r\n   */\r\n  function getFromCity(value) {\r\n    setFromLocation(value)\r\n  }\r\n\r\n  /**\r\n   * Return function returning the complete SearchBox with its components.\r\n   */\r\n  return (\r\n    // div takes up rest of screen after Header.js\r\n    <div className=\"searchbox\">\r\n      {/* div encompasses the entire search field */}\r\n      <form className=\"searchForm\">\r\n        {/* div for destination inputs */}\r\n        <div className=\"destinations\">\r\n          <div className=\"toFrom\">\r\n            <label htmlFor=\"queryInput\">From</label>\r\n            <Locations value={fromLocation} onChange={getFromCity} required></Locations>\r\n            {/* <input id=\"queryInput\" value={fromLocation} onChange={e => setFromLocation(e.target.value)} required/> */}\r\n          </div>\r\n          <div className=\"toFrom\">\r\n            <label htmlFor=\"queryInput\">To</label>\r\n            <Locations value={toLocation} onChange={getToCity} required></Locations>\r\n            {/* <input id=\"queryInput\" value={toLocation} onChange={e => setToLocation(e.target.value)} required/> */}\r\n          </div>\r\n        </div>\r\n        {/* div for date inputs and search button*/}\r\n        <div className=\"datePickers\">\r\n          <div className=\"dates\">\r\n            <label>Depart</label>\r\n            <Datepicker className=\"calender\"\r\n              selected={startDate}\r\n              onChange={handleStartDate}\r\n            /></div>\r\n          <div className=\"dates\">\r\n            <label>Return</label>\r\n            <Datepicker\r\n              selected={endDate}\r\n              onChange={handleEndDate}\r\n            /></div>\r\n          <button className=\"search\" onClick={handleSearch}>Search Flights</button>\r\n        </div>\r\n      </form>\r\n      {/* remainder of page dedicated to a table of search results */}\r\n      { showFlights ? <Flights quotes={flights} className=\"flightTable\"></Flights> : <></>}\r\n      {/* currency dropdown menu */}\r\n      <Currencies value={currency} sendCurrency={getCurrency} ></Currencies>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Default export statement.\r\n */\r\nexport default SearchBox;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport SearchBox from './components/SearchBox';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Flight Search\"></Header>\r\n      <SearchBox></SearchBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}